'use strict'

const minimist = require('minimist')
const commands = require('../commands')

const commandsAvailableInCI = ['deploy', 'test', 'promote', 'delete']

class CI {
  constructor() {
    this.isShellActive = false
    this.styles = {
      dim: (msg) => msg
    }

    this.icons = {
      line: '-'
    }
  }
  async run() {
    const minimistInput = process.argv.slice(2)
    const minimistOutput = minimist(minimistInput)

    this.command = minimistOutput._[0]
    this.args = minimistOutput._.slice(1)
    this.options = minimistOutput

    if (!commandsAvailableInCI.includes(this.command)) {
      throw new Error(`Command ${this.command} is not available in CI/CD context`)
    }

    await commands[this.command](this)

    process.exit()
  }

  log(msg = '', indent = 0) {
    console.log(`${' '.repeat(indent)}${msg}`)
  }

  logInfo(msg, indent) {
    this.log(msg, indent)
  }

  logSuccess(msg, indent) {
    this.log(msg, indent)
  }

  logError(msg, indent) {
    this.log(msg, indent)
  }

  logTime(msg) {
    this.log(msg)
  }

  logUrl(msg) {
    this.log(msg)
  }

  viewSpinner(msg) {
    this.log(msg)
  }

  viewTimer(msg) {
    this.log(msg)
  }
}

module.exports = CI
