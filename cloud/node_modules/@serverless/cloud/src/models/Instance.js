'use strict'

const request = require('../utils/request')

class Instance {
  constructor(data = {}) {
    this.org = data.org
    this.service = data.service
    this.instanceName = data.instanceName || 'demo'
    this.instanceType = data.instanceType
    this.url = data.url
  }

  async get() {
    const options = {
      accessKey: this.org.accessKey,
      method: 'GET',
      endpoint: `/orgs/${this.org.orgName}/services/${this.service.serviceName}/instances/${this.instanceName}`
    }
    const res = await request(options)

    this.url = res.instanceUrl
    this.instanceType = res.instanceType

    return res
  }

  async delete() {
    const options = {
      accessKey: this.org.accessKey,
      method: 'DELETE',
      endpoint: `/orgs/${this.org.orgName}/services/${this.service.serviceName}/instances/${this.instanceName}`
    }
    const res = await request(options)
    return res
  }

  async test() {
    const options = {
      accessKey: this.org.accessKey,
      method: 'POST',
      endpoint: `/orgs/${this.org.orgName}/services/${this.service.serviceName}/instances/${this.instanceName}/test`
    }
    const res = await request(options)
    return res
  }

  async getLogs() {
    const messages = []
    let nextToken
    do {
      const query = nextToken ? `?nextToken=${nextToken}` : ''
      const options = {
        accessKey: this.org.accessKey,
        method: 'GET',
        endpoint: `/orgs/${this.org.orgName}/services/${this.service.serviceName}/instances/${this.instanceName}/logs${query}`
      }
      const response = await request(options)
      messages.push(...response.messages)
      nextToken = response.nextToken
    } while (nextToken)
    return messages
  }

  async getParams() {
    const options = {
      accessKey: this.org.accessKey,
      method: 'GET',
      endpoint: `/orgs/${this.org.orgName}/services/${this.service.serviceName}/instances/${this.instanceName}/params`
    }
    const { params } = await request(options)
    return params
  }

  async putParams(newParams) {
    const options = {
      accessKey: this.org.accessKey,
      method: 'PATCH',
      endpoint: `/orgs/${this.org.orgName}/services/${this.service.serviceName}/instances/${this.instanceName}/params`,
      body: { params: newParams }
    }
    const { params } = await request(options)
    return params
  }
}

module.exports = Instance
